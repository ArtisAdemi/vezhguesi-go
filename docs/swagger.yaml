definitions:
  auth.SignupRequest:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  auth.SignupResponse:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  auth.StatusResponse:
    properties:
      status:
        type: boolean
    type: object
  users.FindResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/users.User'
        type: array
    type: object
  users.User:
    properties:
      active:
        type: boolean
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      verifiedEmail:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/auth/:
    post:
      consumes:
      - application/json
      description: Validates email, username, first name, last name, password checks
        if email exists, if not creates new user and sends email with verification
        link.
      parameters:
      - description: SignupRequest
        in: body
        name: SignupRequest
        required: true
        schema:
          $ref: '#/definitions/auth.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.SignupResponse'
      summary: Signup
      tags:
      - Auth
  /api/auth/verify-signup/{token}:
    get:
      consumes:
      - application/json
      description: Validates token in param, if token parses valid then user will
        be verified and be updated in DB.
      parameters:
      - description: Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.StatusResponse'
      summary: VerifySignup
      tags:
      - Auth
  /api/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.FindResponse'
      summary: GetUsers
      tags:
      - Users
swagger: "2.0"
